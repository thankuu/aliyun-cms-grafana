{"version":3,"sources":["../src/datasource.js"],"names":["_","CmsSigner","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","basePath","url","name","jsonData","q","headers","options","requests","promise","Promise","resolve","result","targets","forEach","target","project","metric","ycol","xcol","describe","query","dimensions","period","group","request","getDimensionsByGroup","then","response","code","data","length","concat","JSON","stringify","indexOf","dimensionAcsJson","dimensionAcsObj","toString","replace","dimensionArray","dimensionJson","i","push","strArray","split","key","substring","value","queryConcat","parseInt","range","from","_d","getTime","to","param","path","method","buildRealUrl","isEmpty","d","defer","datasourceRequest","status","Code","resResult","dataDatapoints","angular","fromJson","Datapoints","datapoints","ycolTarget","each","datapoint","Datapoint","parse","catch","error","console","log","all","map","p","e","ErrorCode","Success","message","title","signer","accessKeyId","cmsAccessKey","secretAccessKey","cmsSecretKey","addAuthorization","text","isObject","projectArray","Resources","Resource","projectInfo","Project","acs_param","projectAcsLog","UserId","projectAcsCustom","resource","resourceInfo","Metric","Periods","mapToTextValue","statistics","Statistics","groupInfo","GroupId","GroupName","isNaN","instance","instanceInfo","InstanceId","includes","endTime","Date","startTime","datapointInfo","instanceId","obj"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport {CmsSigner} from \"./signer.js\";\n\nexport class GenericDatasource {\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.basePath = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.jsonData = instanceSettings.jsonData;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.headers = {'Content-Type': 'application/json'};\n  }\n\n  query(options){\n    let requests = []\n    let promise = Promise.resolve();\n    var result =[];\n    _(options.targets).forEach(target => {\n        //非空参数判空处理\n        if(!target.project || !target.metric || !target.ycol || !target.xcol){\n          return;\n        }\n        var project = target.project;\n        var metric = target.metric;\n        //默认数组\n        var ycol = target.ycol;\n        var xcol = target.xcol;\n        var describe = target.describe;\n        if(!describe){\n          describe = '';\n        }else{\n          describe = describe +\".\";\n        }\n        var query =\"/?Action=QueryMetricList&Length=2000\";\n        var dimensions =\"\";\n        var period = target.period;\n        var group = target.group\n        if(!period){\n          period = '';\n        }\n        if(!group){\n          group = '';\n        }\n        //定义Promise元数据\n        let request = this.getDimensionsByGroup(group,project).then(response=>{\n          // console.log(JSON.stringify(response));\n          //处理group--根据GroupId获取该组下的所有实例Id\n          if('200' == response.code && response.data.length > 0){\n              var data = response.data;\n              dimensions = dimensions.concat(JSON.stringify(data));\n          }else{\n            dimensions = '';\n          }\n          //自定义监控(acs_custom)、日志监控(acs_logMonitor)自动取消分组功能\n          if(project.indexOf(\"acs_custom\") == -1 || project.indexOf(\"acs_logMonitor\") == -1){\n            dimensions = '';\n          }\n        }).then(()=>{\n          //GroupId存在的同时,dimensions存在,则dimensions覆盖Group下的所有实例Id，以dimensions为准\n          if(target.dimensions.length == 0){\n             dimensions = dimensions;\n          }else{\n            //自定义监控(acs_custom)、日志监控(acs_logMonitor)处理\n            // console.log(project.indexOf(\"acs_custom\") == -1);\n            // console.log(project.indexOf(\"acs_logMonitor\") == -1);\n            if(project.indexOf(\"acs_custom\") != -1 || project.indexOf(\"acs_logMonitor\") != -1){\n              var dimensionAcsJson = target.dimensions[0];\n              var dimensionAcsObj = {\"groupId\":group.toString(),\n                              \"dimension\":dimensionAcsJson.replace(/\\&/gi, '%26').replace(/\\{/gi, '%7B').replace(/\\}/gi, '%7D')};\n              dimensions = JSON.stringify(dimensionAcsObj);\n            }else{\n              //数组对象\n              var dimensionArray =[];\n              var dimensionJson = target.dimensions;\n              var i = dimensionJson.length;\n              while (i--) {\n                // dimensionArray.push({\"instanceId\":dimensionJson[i]});\n                //判断是否使用了变量\n                if (dimensionJson[i][0] === '$') {\n                  dimensionArray.push({ \"instanceId\": this.templateSrv.replace(dimensionJson[i]) });\n                } else if (dimensionJson[i][0] === '#') {\n                  var strArray = dimensionJson[i].split('|');\n                  var key = strArray[0].substring(1);\n                  var value = strArray[1];\n                  dimensionArray.push({ key: value });\n                } \n                else {\n                  dimensionArray.push({ \"instanceId\": dimensionJson[i] });\n                }\n              }\n              dimensions ='';\n              dimensions =dimensions.concat(JSON.stringify(dimensionArray));\n            }\n          }\n          //拼接查询参数\n          var queryConcat= query + \"&Project=\"+project+\"&Metric=\"+metric+\n                                        \"&Period=\"+period+\"&Dimensions=\"+dimensions+\n                                        \"&StartTime=\"+(parseInt(options.range.from._d.getTime()))+\n                                        \"&EndTime=\"+(parseInt(options.range.to._d.getTime())) ;\n          var param = {\n              path: queryConcat,\n              method: \"GET\"\n          };\n          // 签名已拼接的待查询URL\n          query = this.buildRealUrl(param);\n          // console.log(\"查看query的值：\"+query);\n          if (_.isEmpty(query)) {\n              var d = this.q.defer();\n              d.resolve({data: []});\n              return d.promise;\n          } \n          // 根据URL发起请求\n          return this.backendSrv.datasourceRequest({\n              url: query,\n              method: 'GET',\n              headers: this.headers\n          }).then(response => {\n            if(response.status == '200' && response.data.Code == '200'){\n              // 处理返回结果 (需优化)\n              var resResult = [];\n              // 解析返回的Datapoints数据集\n              var dataDatapoints = angular.fromJson(response.data.Datapoints);\n              // console.log(\"长度\"+dataDatapoints.length);\n              // console.log(JSON.stringify(dataDatapoints));\n              // 处理Grafana所需的target值\n              var i = ycol.length;\n              // 处理Target组的所需返回结果集\n              while (i--) {\n                var datapoints = [];\n                var ycolTarget = ycol[i];\n                // console.log(ycolTarget);\n                // console.log(xcol);\n                // 封装返回目标的第一层数组值\n                _.each(dataDatapoints, Datapoint => {\n                    let datapoint = [];\n                    datapoint.push(Datapoint[ycolTarget], Datapoint[xcol]);\n                    // 封装返回目标的第二层数组值\n                    datapoints.push(datapoint);\n                });\n                // 封装返回目标的第三层数组值\n                resResult.push({\n                   \"target\": describe + ycolTarget,\n                   \"datapoints\": datapoints\n                });\n                // console.log(JSON.stringify(resResult));\n              }\n              // 转对象封装\n              result = result.concat(typeof resResult == 'string' ? JSON.parse(resResult) : resResult);\n            }\n          }).catch(function (error) {\n            console.log(error);\n          });\n        });\n        requests.push(request);\n      })\n    // 统一单独处理返回值(可优化)\n    return Promise.all(requests.map(p => p.catch(e => e)))\n            .then(requests => {\n              return {data: result};\n            });\n  } \n\n  // 测试连接数据源接口\n  testDatasource() {\n      var param = {\n          path: \"/?Action=AccessKeyGet\",\n          method: \"GET\"\n      };\n      return this.backendSrv.datasourceRequest({\n          url: this.buildRealUrl(param),\n          method: 'GET'\n      }).then(response => {\n          // console.log(response);\n          var data = response.data;\n          if (data.ErrorCode == 200 && data.Success == true ) {\n              return {status: \"success\", message: \"Data source is working\", title: \"Success\"};\n          }\n      });\n  }\n\n  annotationQuery(options){\n\n  } \n  metricFindQuery(options){\n\n  }\n\n  // 根据阿里监控API文档处理URL签名,做封装调用接口用\n  buildRealUrl(param) {\n      var signer = new CmsSigner({\n          accessKeyId: this.jsonData.cmsAccessKey,\n          secretAccessKey: this.jsonData.cmsSecretKey\n      }, param);\n      signer.addAuthorization();\n      return this.basePath + signer.request.path;\n  }\n\n  //将数组处理成Map对象集 \n  mapToTextValue(result) {\n    return _.map(result, (d, i) => {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_.isObject(d)) {\n        return { text: d, value: i};\n      }\n      return { text: d, value: d };\n    });\n  }\n\n  //返回所有的Project TODO等API待优化  \n  // QueryProjectMeta的API无自定义监控project、日志监控project，待确认是否拼接\n  getProject(){\n    var param = {\n        path: \"/?Action=QueryProjectMeta&PageNumber=1&PageSize=100\",\n        method: \"GET\"\n    };\n    return this.backendSrv.datasourceRequest({\n        url: this.buildRealUrl(param),\n        method: 'GET'\n    }).then(response => {\n        var result =[];\n        var data = response.data;\n        if (data.ErrorCode == 200 && data.Success == true) {\n          // console.log(JSON.stringify(data));\n          var projectArray = data.Resources.Resource;\n          // console.log(JSON.stringify(projectArray));\n          var i = projectArray.length;\n          // console.log(i);\n          while (i--) {\n            var projectInfo = projectArray[i];\n            // console.log(projectInfo);\n            var project =[];\n            project.push(projectInfo.Project);\n            result.push(project);\n          }\n        }\n        // console.log(this.jsonData.uid);\n        //增加自定义监控、日志监控选项\n        var acs_param = {\n            path: \"/?Action=AccessKeyGet\",\n            method: \"GET\"\n        };\n        return this.backendSrv.datasourceRequest({\n          url: this.buildRealUrl(acs_param),\n          method: 'GET'\n        }).then(response => {\n          var data = response.data;\n          if (data.ErrorCode == 200 && data.Success == true ) {\n              var projectAcsLog =[];\n              projectAcsLog.push(\"acs_logMonitor_\"+data.UserId);\n              result.push(projectAcsLog);\n              var projectAcsCustom =[];\n              projectAcsCustom.push(\"acs_customMetric_\"+data.UserId);\n              result.push(projectAcsCustom);\n          }\n          return _.map(result, (d, i) => {\n            return { text: d, value: d};\n          });\n        });\n    }).catch(function (error) {\n      console.log(error);\n      return;\n    });\n  }\n\n  //根据Project返回对应的所有的Metrics 无自定义监控project、日志监控project对应的Metrics TODO等API待优化\n  getMetrics(project){\n    var param = {\n        path: \"/?Action=QueryMetricMeta&PageNumber=1&PageSize=150&Project=\" + project,\n        method: \"GET\"\n    };\n    return this.backendSrv.datasourceRequest({\n        url: this.buildRealUrl(param),\n        method: 'GET'\n    }).then(response => {\n        var data = response.data;\n        if (data.ErrorCode == 200 && data.Success == true) {\n          var result =[];\n          // console.log(JSON.stringify(data));\n          var resource = data.Resources.Resource;\n          // console.log(JSON.stringify(projectArray));\n          var i = resource.length;\n          // console.log(i);\n          while (i--) {\n            var resourceInfo = resource[i];\n            // console.log(projectInfo);\n            var metric =[];\n            metric.push(resourceInfo.Metric);\n            result.push(metric);\n          }\n          return _.map(result, (d, i) => {\n            return { text: d, value: d};\n          });\n        }\n    }).catch(function (error) {\n      console.log(error);\n      return;\n    });\n  }\n\n  //根据Project及Metrics返回对应的所有的Period 无自定义监控project、日志监控project对应的Period,TODO等API待优化\n  getPeriod(project,metric){\n    var param = {\n        path: \"/?Action=QueryMetricMeta&PageNumber=1&PageSize=1&Project=\"+ project + \"&Metric=\" + metric,\n        method: \"GET\"\n    };\n    return this.backendSrv.datasourceRequest({\n        url: this.buildRealUrl(param),\n        method: 'GET'\n    }).then(response => {\n        var data = response.data;\n        if (data.ErrorCode == 200 && data.Success == true) {\n          var result =[];\n          var period = [];\n          var resource = data.Resources.Resource;\n          if(resource.length == 0 || !resource[0].Periods ){\n            return this.mapToTextValue(period);\n          }\n          period =resource[0].Periods.split(\",\");\n          // console.log(period);\n          return this.mapToTextValue(period);\n        }\n    }).catch(function (error) {\n      console.log(error);\n      return;\n    });\n  }\n\n  //根据Project及Metrics返回对应的所有的Statistics，未处理去除已选项 自定义监控无处理\n  getStatistics(project,metric,ycol){\n    var param = {\n        path: \"/?Action=QueryMetricMeta&PageNumber=1&PageSize=1&Project=\" + project + \"&Metric=\" + metric,\n        method: \"GET\"\n    };\n    return this.backendSrv.datasourceRequest({\n        url: this.buildRealUrl(param),\n        method: 'GET'\n    }).then(response => {\n        var data = response.data;\n        if (data.ErrorCode == 200 && data.Success == true) {\n          var result =[];\n          var statistics=[];\n          var resource = data.Resources.Resource;\n          if(resource.length == 0 || !resource[0].Statistics){\n            return this.mapToTextValue(statistics);\n          }\n          statistics = resource[0].Statistics.split(\",\");\n          return this.mapToTextValue(statistics);\n        }\n    }).catch(function (error) {\n      console.log(error);\n      return;\n    });\n  }\n\n  //返回所有的Groups\n  getGroups(){\n    var param = {\n        path: \"/?Action=ListMyGroups&PageNumber=1&PageSize=1000\" ,\n        method: \"GET\"\n    };\n    return this.backendSrv.datasourceRequest({\n        url: this.buildRealUrl(param),\n        method: 'GET'\n    }).then(response => {\n      var data = response.data;\n      if (data.ErrorCode == 200 && data.Success == true) {\n        var result =[];\n        var resource = data.Resources.Resource;\n        var i = resource.length;\n        while (i--) {\n            var group = resource[i];\n            var groupInfo =[];\n            groupInfo.push(group.GroupId,group.GroupName +\" / \" + group.GroupId);\n            result.push(groupInfo);\n        }\n        return _.map(result, (d, i) => {\n          return { text: d[1], value: d[0]};\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n      return;\n    });\n  }\n\n  //返回所有的Dimensions 自定义监控无处理\n  // -- 如果有应用分组Id则根据该值查询该组下所有的Dimensions\n  // -- 如果无应用分组Id则根据查询该账户下所有的Dimensions\n  getDimensions(project,metric,group,dimensions,period,query){\n    var result =[];\n    if(!group || typeof group == 'string'){\n        group = 0;\n    }\n    if(isNaN(parseInt(group))){\n        group = 0;\n    }\n    if(project.indexOf(\"acs_customMetric\") != -1 || project.indexOf(\"acs_logMonitor\") != -1){\n      return;\n    }\n    if(group !=0){\n      var param = {\n          path: \"/?Action=ListMyGroupInstances&PageNumber=1&PageSize=1000&GroupId=\" + parseInt(group),\n          method: \"GET\"\n      };\n      return this.backendSrv.datasourceRequest({\n          url: this.buildRealUrl(param),\n          method: 'GET'\n      }).then(response => {\n        // console.log(JSON.stringify(response));\n        var data = response.data;\n        if (data.ErrorCode == 200 && data.Success == true){\n          var resource = data.Resources.Resource;\n\n          var i = resource.length;\n          while (i--) {\n              var instance = resource[i];\n              var instanceInfo =[];\n              //判断空对象处理\n              if(!instance.InstanceId){\n                continue;\n              }\n              // 去掉页面已选择实例\n              if(_.includes(dimensions, instance.InstanceId)){\n                continue;\n              }\n              instanceInfo.push(instance.InstanceId);\n              result.push(instanceInfo);\n          }\n          return _.map(result, (d, i) => {\n            return { text: d, value: d};\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n        return;\n      });\n    }else{\n      var endTime = new Date().getTime();\n      var startTime = endTime - 1 * 60 * 60 * 1000;\n      var param = {\n          path: \"/?Action=QueryMetricLast&Page=1&Length=1000&Period=\"+period+\"&Project=\" \n                              + project + \"&Metric=\" + metric + \"&StartTime=\" + startTime + \"&EndTime=\" + endTime,\n          method: \"GET\"\n      };\n      return this.backendSrv.datasourceRequest({\n          url: this.buildRealUrl(param),\n          method: 'GET'\n      }).then(response => {\n        var data = response.data;\n        // console.log(JSON.stringify(data));\n        var datapoints = JSON.parse(data.Datapoints);\n        // console.log(JSON.stringify(datapoints));\n        var i = datapoints.length;\n        if (i >0) {\n          while (i--) {\n              var datapoint = datapoints[i];\n              var datapointInfo =[];\n              //判断空对象处理\n              if(!datapoint.instanceId){\n                continue;\n              }\n              // 去掉页面已选择实例\n              if(_.includes(dimensions, datapoint.instanceId)){\n                continue;\n              }\n              datapointInfo.push(datapoint.instanceId);\n              result.push(datapointInfo);\n          }\n          return _.map(result, (d, i) => {\n            return { text: d, value: d};\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n        return;\n      });\n    }\n  }\n\n  // 根据应用分组Id返回该组下所有的Dimensions \n  getDimensionsByGroup(group){\n    var result =[];\n    if(!group || typeof group == 'string'){\n        group = 0;\n    }\n    if(isNaN(parseInt(group))){\n        group = 0;\n    }\n    var param = {\n        path: \"/?Action=ListMyGroupInstances&PageNumber=1&PageSize=1000&GroupId=\" + parseInt(group),\n        method: \"GET\"\n    };\n    return this.backendSrv.datasourceRequest({\n        url: this.buildRealUrl(param),\n        method: 'GET'\n    }).then(response => {\n      var dimensions = [];\n      var data = response.data;\n      if (data.ErrorCode == 200 && data.Success == true) {\n        var resource = data.Resources.Resource;\n        var i = resource.length;\n        while (i--) {\n            var instance = resource[i];\n            dimensions.push({\"instanceId\":instance.InstanceId});\n        }\n        result = result.concat(typeof dimensions == 'string' ? JSON.parse(dimensions) : dimensions);\n        return {data:result,code:'200'};\n      }else{\n        return {data:result,code:'400'};\n      }\n    }).catch(function (error) {\n      console.log(error);\n      return {data:result,code:'400'};\n    });\n  }\n\n  isNotEmpty(obj) { // 判断对象是否为空对象\n    for (var name in obj) {\n        return true;\n    } // 不为空\n    return false; // 为空\n  }\n}"]}